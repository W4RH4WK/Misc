#!/usr/bin/env python3

import os
import sys

from base64 import b64encode
from pandocfilters import toJSONFilter, RawBlock, RawInline
from subprocess import check_output


def tex2svg(content):
    tex2svg = ['tex2svg', 'tex2svg.tex']
    svg = check_output([os.path.join('tpl', x) for x in tex2svg],
                       input=content.encode())
    svg = b64encode(svg).decode()
    return 'data:image/svg+xml;base64,{}'.format(svg)


def latex(key, value, format, meta):
    if key == 'Math' and value[0]['t'] == 'InlineMath':
        svg = tex2svg('${}$'.format(value[1]))
        svg = '<img src="{}" class="latex-InlineMath" />'.format(svg)
        return RawInline('html', svg)

    if key == 'Math' and value[0]['t'] == 'DisplayMath':
        svg = tex2svg('\\[{}\\]'.format(value[1]))
        svg = '<img src="{}" class="latex-DisplayMath" />'.format(svg)
        return RawInline('html', svg)

    if key == 'RawBlock' and value[0] == 'latex':
        svg = tex2svg(value[1])
        svg = '<p><img src="{}" class="latex-DisplayMath" /></p>'.format(svg)
        return RawBlock('html', svg)


if __name__ == '__main__':
    toJSONFilter(latex)
